const CACHE_NAME = 'al-quran-digital-v3123';
const urlsToCache = [
'/',
"/audio.html",
"/bbldrizzy.html",
"/doa.html",
"/index.html",
"/manifest.json",
"/quran.html",
"/tasbih.html",
"/_redirects",
"/audio/hselesai.mp3",
"/audio/klik.mp3",
"/bk/claud.html",
"/css/all.min.css",
"/css/audio.css",
"/css/doa.css",
"/css/index.css",
"/css/tasbih.css",
"/doa/doa.json",
"/font/LPMQ-IsepMisbah.woff2",
"/images/android-chrome-192x192.png",
"/images/android-chrome-512x512.png",
"/images/apple-touch-icon.png",
"/images/favicon-16x16.png",
"/images/favicon-32x32.png",
"/images/favicon.ico",
"/images/icon-192x192.png",
"/images/icon-512x512.png",
"/images/quran-thumbnail.jpg",
"/js/app.js",
"/js/download.js",
"/js/kdot.js",
"/js/kdot2.js",
"/js/kdot3.js",
"/js/quranen.js",
"/js/sweetalert2@11.js",
"/surat/1.json",
"/surat/10.json",
"/surat/100.json",
"/surat/101.json",
"/surat/102.json",
"/surat/103.json",
"/surat/104.json",
"/surat/105.json",
"/surat/106.json",
"/surat/107.json",
"/surat/108.json",
"/surat/109.json",
"/surat/11.json",
"/surat/110.json",
"/surat/111.json",
"/surat/112.json",
"/surat/113.json",
"/surat/114.json",
"/surat/12.json",
"/surat/13.json",
"/surat/14.json",
"/surat/15.json",
"/surat/16.json",
"/surat/17.json",
"/surat/18.json",
"/surat/19.json",
"/surat/2.json",
"/surat/20.json",
"/surat/21.json",
"/surat/22.json",
"/surat/23.json",
"/surat/24.json",
"/surat/25.json",
"/surat/26.json",
"/surat/27.json",
"/surat/28.json",
"/surat/29.json",
"/surat/3.json",
"/surat/30.json",
"/surat/31.json",
"/surat/32.json",
"/surat/33.json",
"/surat/34.json",
"/surat/35.json",
"/surat/36.json",
"/surat/37.json",
"/surat/38.json",
"/surat/39.json",
"/surat/4.json",
"/surat/40.json",
"/surat/41.json",
"/surat/42.json",
"/surat/43.json",
"/surat/44.json",
"/surat/45.json",
"/surat/46.json",
"/surat/47.json",
"/surat/48.json",
"/surat/49.json",
"/surat/5.json",
"/surat/50.json",
"/surat/51.json",
"/surat/52.json",
"/surat/53.json",
"/surat/54.json",
"/surat/55.json",
"/surat/56.json",
"/surat/57.json",
"/surat/58.json",
"/surat/59.json",
"/surat/6.json",
"/surat/60.json",
"/surat/61.json",
"/surat/62.json",
"/surat/63.json",
"/surat/64.json",
"/surat/65.json",
"/surat/66.json",
"/surat/67.json",
"/surat/68.json",
"/surat/69.json",
"/surat/7.json",
"/surat/70.json",
"/surat/71.json",
"/surat/72.json",
"/surat/73.json",
"/surat/74.json",
"/surat/75.json",
"/surat/76.json",
"/surat/77.json",
"/surat/78.json",
"/surat/79.json",
"/surat/8.json",
"/surat/80.json",
"/surat/81.json",
"/surat/82.json",
"/surat/83.json",
"/surat/84.json",
"/surat/85.json",
"/surat/86.json",
"/surat/87.json",
"/surat/88.json",
"/surat/89.json",
"/surat/9.json",
"/surat/90.json",
"/surat/91.json",
"/surat/92.json",
"/surat/93.json",
"/surat/94.json",
"/surat/95.json",
"/surat/96.json",
"/surat/97.json",
"/surat/98.json",
"/surat/99.json",
"/surat/surat.json",
"/tafsir/1.json",
"/tafsir/10.json",
"/tafsir/100.json",
"/tafsir/101.json",
"/tafsir/102.json",
"/tafsir/103.json",
"/tafsir/104.json",
"/tafsir/105.json",
"/tafsir/106.json",
"/tafsir/107.json",
"/tafsir/108.json",
"/tafsir/109.json",
"/tafsir/11.json",
"/tafsir/110.json",
"/tafsir/111.json",
"/tafsir/112.json",
"/tafsir/113.json",
"/tafsir/114.json",
"/tafsir/12.json",
"/tafsir/13.json",
"/tafsir/14.json",
"/tafsir/15.json",
"/tafsir/16.json",
"/tafsir/17.json",
"/tafsir/18.json",
"/tafsir/19.json",
"/tafsir/2.json",
"/tafsir/20.json",
"/tafsir/21.json",
"/tafsir/22.json",
"/tafsir/23.json",
"/tafsir/24.json",
"/tafsir/25.json",
"/tafsir/26.json",
"/tafsir/27.json",
"/tafsir/28.json",
"/tafsir/29.json",
"/tafsir/3.json",
"/tafsir/30.json",
"/tafsir/31.json",
"/tafsir/32.json",
"/tafsir/33.json",
"/tafsir/34.json",
"/tafsir/35.json",
"/tafsir/36.json",
"/tafsir/37.json",
"/tafsir/38.json",
"/tafsir/39.json",
"/tafsir/4.json",
"/tafsir/40.json",
"/tafsir/41.json",
"/tafsir/42.json",
"/tafsir/43.json",
"/tafsir/44.json",
"/tafsir/45.json",
"/tafsir/46.json",
"/tafsir/47.json",
"/tafsir/48.json",
"/tafsir/49.json",
"/tafsir/5.json",
"/tafsir/50.json",
"/tafsir/51.json",
"/tafsir/52.json",
"/tafsir/53.json",
"/tafsir/54.json",
"/tafsir/55.json",
"/tafsir/56.json",
"/tafsir/57.json",
"/tafsir/58.json",
"/tafsir/59.json",
"/tafsir/6.json",
"/tafsir/60.json",
"/tafsir/61.json",
"/tafsir/62.json",
"/tafsir/63.json",
"/tafsir/64.json",
"/tafsir/65.json",
"/tafsir/66.json",
"/tafsir/67.json",
"/tafsir/68.json",
"/tafsir/69.json",
"/tafsir/7.json",
"/tafsir/70.json",
"/tafsir/71.json",
"/tafsir/72.json",
"/tafsir/73.json",
"/tafsir/74.json",
"/tafsir/75.json",
"/tafsir/76.json",
"/tafsir/77.json",
"/tafsir/78.json",
"/tafsir/79.json",
"/tafsir/8.json",
"/tafsir/80.json",
"/tafsir/81.json",
"/tafsir/82.json",
"/tafsir/83.json",
"/tafsir/84.json",
"/tafsir/85.json",
"/tafsir/86.json",
"/tafsir/87.json",
"/tafsir/88.json",
"/tafsir/89.json",
"/tafsir/9.json",
"/tafsir/90.json",
"/tafsir/91.json",
"/tafsir/92.json",
"/tafsir/93.json",
"/tafsir/94.json",
"/tafsir/95.json",
"/tafsir/96.json",
"/tafsir/97.json",
"/tafsir/98.json",
"/tafsir/99.json",
"/webfonts/fa-regular-400.ttf",
"/webfonts/fa-regular-400.woff2",
"/webfonts/fa-solid-900.ttf",
"/webfonts/fa-solid-900.woff2",
"/webfonts/Poppins-Bold.ttf",
"/webfonts/Poppins-Regular.ttf",
];

self.addEventListener('install', (event) => {
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then((cache) => {
        console.log('Opened cache');
        return cache.addAll(urlsToCache);
      })
  );
});

self.addEventListener('fetch', (event) => {
  event.respondWith(
    caches.match(event.request)
      .then((response) => {
        if (response) {
          return response;
        }
        return fetch(event.request).then(
          (response) => {
            if(!response || response.status !== 200 || response.type !== 'basic') {
              return response;
            }

            const responseToCache = response.clone();

            caches.open(CACHE_NAME)
              .then((cache) => {
                cache.put(event.request, responseToCache);
              });

            return response;
          }
        );
      })
  );
});

self.addEventListener('activate', (event) => {
  const cacheWhitelist = [CACHE_NAME];
  event.waitUntil(
    caches.keys().then((cacheNames) => {
      return Promise.all(
        cacheNames.map((cacheName) => {
          if (cacheWhitelist.indexOf(cacheName) === -1) {
            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});